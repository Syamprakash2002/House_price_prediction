# -*- coding: utf-8 -*-
"""Untitled7.House prize predictionsction

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OkVNCs51M3otRGqExAdsKWRLeZrYlm16
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

data =pd.read_csv("/content/large_house_prices_dataset.csv")

df=data

df

df=pd.DataFrame(data)

df

x= df[["Size"]] #Independent varaible (Features)

y =df[["Price"]] # dependent variable(Target)

x_train,x_test,y_train,y_test =train_test_split (x,y ,test_size=0.2, random_state=42)

model = LinearRegression() #Create a Linear Regression model
model.fit(x_train,y_train) # Train the model on training data

m = model.coef_[0]  # Slope (m)
c = model.intercept_  # Intercept (c)
print(f"Equation: Price = {m} * Size + {c}")

y_pred = model.predict(x_test)

mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse}")

plt.scatter(x, y, color='blue', label="Actual Prices")  # Scatter plot of actual data points
plt.plot(x, model.predict(x), color='red', label="Regression Line")  # Plot regression line
plt.xlabel("Size (sq. ft.)")  # X-axis label
plt.ylabel("Price ($1000s)")  # Y-axis label
plt.legend()  # Show legend
plt.show()  # Display the graph

